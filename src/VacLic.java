import Crypt.Crypto;
import java.awt.Component;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;

/**
 * @author Ing. Juan José Guzmán Cruz
 */

public class VacLic extends javax.swing.JFrame {
    
    // DEFINIR VARIABLES
    HelperDB helper;
    DefaultTableModel model;
    String id, id_alf, id_vaclic;
    int op;
    
    /**
     * Creates new form VacLic
     */
    public VacLic() {
        
        initComponents();
        
        // CONSTRUIR VARIABLES 
        helper = new HelperDB();
        model = new DefaultTableModel();
        
        // CONDICIONES INICIALES
        habilitarCampos(false);
        jTableVacLic.setSelectionMode(NORMAL);       
        
        // CENTRAR jForm EN PANTALLA
        setResizable(false);
        setLocationRelativeTo(null);
        
        // MÉTODOS INICIALES
        //getModelFromTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupVacLicEliminar = new javax.swing.JPopupMenu();
        jMenuItemVacLicEliminar = new javax.swing.JMenuItem();
        dReporte = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabelAdsc = new javax.swing.JLabel();
        jLabelTarjeta = new javax.swing.JLabel();
        jLabelNumEmp = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonBuscar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jButtonCerrar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabelFolio = new javax.swing.JLabel();
        jLabelClave = new javax.swing.JLabel();
        fieldPeriodoSerie = new javax.swing.JTextField();
        jLabelPeriodoSerie = new javax.swing.JLabel();
        jLabelDias = new javax.swing.JLabel();
        jLabelInicio = new javax.swing.JLabel();
        jLabelArt = new javax.swing.JLabel();
        fieldUno = new javax.swing.JTextField();
        jLabelUno = new javax.swing.JLabel();
        fieldDos = new javax.swing.JTextField();
        jLabelDos = new javax.swing.JLabel();
        fieldTres = new javax.swing.JTextField();
        jLabelTres = new javax.swing.JLabel();
        jLabelCuatro = new javax.swing.JLabel();
        fieldCuatro = new javax.swing.JTextField();
        fieldCinco = new javax.swing.JTextField();
        jLabelCinco = new javax.swing.JLabel();
        fieldSeis = new javax.swing.JTextField();
        jLabelSeis = new javax.swing.JLabel();
        fieldSiete = new javax.swing.JTextField();
        jLabelSiete = new javax.swing.JLabel();
        jLabelOcho = new javax.swing.JLabel();
        fieldOcho = new javax.swing.JTextField();
        fieldNueve = new javax.swing.JTextField();
        jLabelNueve = new javax.swing.JLabel();
        fieldDiez = new javax.swing.JTextField();
        jLabelDiez = new javax.swing.JLabel();
        fieldNotas = new javax.swing.JTextField();
        jLabelNotas = new javax.swing.JLabel();
        spinnerInicio = new javax.swing.JSpinner();
        fieldFolio = new javax.swing.JFormattedTextField();
        fieldClave = new javax.swing.JFormattedTextField();
        fieldDias = new javax.swing.JFormattedTextField();
        fieldArt = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVacLic = new javax.swing.JTable();

        jMenuItemVacLicEliminar.setText("ELIMINAR");
        jMenuItemVacLicEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItemVacLicEliminarMouseReleased(evt);
            }
        });
        jPopupVacLicEliminar.add(jMenuItemVacLicEliminar);

        javax.swing.GroupLayout dReporteLayout = new javax.swing.GroupLayout(dReporte.getContentPane());
        dReporte.getContentPane().setLayout(dReporteLayout);
        dReporteLayout.setHorizontalGroup(
            dReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        dReporteLayout.setVerticalGroup(
            dReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vacaciones y Licencias");
        setAlwaysOnTop(true);
        setMaximumSize(new java.awt.Dimension(1291, 800));
        setMinimumSize(new java.awt.Dimension(1291, 800));
        setName("frameVacLic"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1291, 800));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del trabajador"));

        jLabelAdsc.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabelAdsc.setText("Adsc");
        jLabelAdsc.setMaximumSize(new java.awt.Dimension(110, 17));
        jLabelAdsc.setPreferredSize(new java.awt.Dimension(110, 21));

        jLabelTarjeta.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabelTarjeta.setText("Tarjeta");
        jLabelTarjeta.setMaximumSize(new java.awt.Dimension(160, 17));
        jLabelTarjeta.setPreferredSize(new java.awt.Dimension(160, 21));

        jLabelNumEmp.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabelNumEmp.setText("NumEmp");
        jLabelNumEmp.setMaximumSize(new java.awt.Dimension(170, 17));
        jLabelNumEmp.setPreferredSize(new java.awt.Dimension(170, 21));

        jLabelNombre.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabelNombre.setText("Nombre");
        jLabelNombre.setMaximumSize(new java.awt.Dimension(489, 17));
        jLabelNombre.setPreferredSize(new java.awt.Dimension(489, 21));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelAdsc, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabelTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabelNumEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAdsc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNumEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButtonBuscar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setMaximumSize(new java.awt.Dimension(70, 29));
        jButtonBuscar.setMinimumSize(new java.awt.Dimension(70, 29));
        jButtonBuscar.setPreferredSize(new java.awt.Dimension(100, 50));
        jButtonBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonBuscarMouseReleased(evt);
            }
        });

        jButtonAgregar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButtonAgregar.setText("Agregar");
        jButtonAgregar.setEnabled(false);
        jButtonAgregar.setMaximumSize(new java.awt.Dimension(70, 29));
        jButtonAgregar.setMinimumSize(new java.awt.Dimension(70, 29));
        jButtonAgregar.setPreferredSize(new java.awt.Dimension(100, 50));
        jButtonAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonAgregarMouseReleased(evt);
            }
        });

        jButtonCerrar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButtonCerrar.setText("Cerrar");
        jButtonCerrar.setMaximumSize(new java.awt.Dimension(70, 29));
        jButtonCerrar.setMinimumSize(new java.awt.Dimension(70, 29));
        jButtonCerrar.setPreferredSize(new java.awt.Dimension(100, 50));
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 188, 188)
                .addComponent(jButtonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Área de captura", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabelFolio.setText("Folio");

        jLabelClave.setText("Clave");

        fieldPeriodoSerie.setPreferredSize(new java.awt.Dimension(100, 27));

        jLabelPeriodoSerie.setText("Periodo/Serie");

        jLabelDias.setText("Días");

        jLabelInicio.setText("Inicio");

        jLabelArt.setText("Art.");

        fieldUno.setPreferredSize(new java.awt.Dimension(50, 27));

        jLabelUno.setText("1");

        fieldDos.setPreferredSize(new java.awt.Dimension(50, 27));

        jLabelDos.setText("2");

        fieldTres.setPreferredSize(new java.awt.Dimension(50, 27));

        jLabelTres.setText("3");

        jLabelCuatro.setText("4");

        fieldCuatro.setPreferredSize(new java.awt.Dimension(50, 27));

        fieldCinco.setPreferredSize(new java.awt.Dimension(50, 27));

        jLabelCinco.setText("5");

        fieldSeis.setPreferredSize(new java.awt.Dimension(50, 27));

        jLabelSeis.setText("6");

        fieldSiete.setPreferredSize(new java.awt.Dimension(50, 27));

        jLabelSiete.setText("7");

        jLabelOcho.setText("8");

        fieldOcho.setPreferredSize(new java.awt.Dimension(50, 27));

        fieldNueve.setPreferredSize(new java.awt.Dimension(50, 27));

        jLabelNueve.setText("9");

        fieldDiez.setPreferredSize(new java.awt.Dimension(50, 27));

        jLabelDiez.setText("10");

        fieldNotas.setPreferredSize(new java.awt.Dimension(60, 27));

        jLabelNotas.setText("Notas");

        spinnerInicio.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.HOUR_OF_DAY));
        spinnerInicio.setPreferredSize(new java.awt.Dimension(100, 28));

        fieldFolio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fieldFolio.setPreferredSize(new java.awt.Dimension(60, 27));

        fieldClave.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##"))));
        fieldClave.setPreferredSize(new java.awt.Dimension(60, 27));

        fieldDias.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
        fieldDias.setPreferredSize(new java.awt.Dimension(60, 27));

        fieldArt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##.#"))));
        fieldArt.setPreferredSize(new java.awt.Dimension(60, 27));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelFolio)
                        .addGap(30, 30, 30)
                        .addComponent(jLabelClave))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(fieldFolio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fieldPeriodoSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPeriodoSerie))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabelDias)
                        .addGap(54, 54, 54)
                        .addComponent(jLabelInicio))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(fieldDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(spinnerInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(fieldArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldTres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldCuatro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabelArt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelUno)
                        .addGap(44, 44, 44)
                        .addComponent(jLabelDos)
                        .addGap(49, 49, 49)
                        .addComponent(jLabelTres)
                        .addGap(47, 47, 47)
                        .addComponent(jLabelCuatro)
                        .addGap(26, 26, 26)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(fieldCinco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldSeis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldSiete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldOcho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldNueve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(fieldDiez, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fieldNotas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabelCinco)
                        .addGap(49, 49, 49)
                        .addComponent(jLabelSeis)
                        .addGap(44, 44, 44)
                        .addComponent(jLabelSiete)
                        .addGap(47, 47, 47)
                        .addComponent(jLabelOcho)
                        .addGap(48, 48, 48)
                        .addComponent(jLabelNueve)
                        .addGap(40, 40, 40)
                        .addComponent(jLabelDiez)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelNotas)
                        .addGap(88, 88, 88))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelFolio)
                                .addComponent(jLabelClave)
                                .addComponent(jLabelPeriodoSerie)
                                .addComponent(jLabelDias))
                            .addComponent(jLabelInicio)
                            .addComponent(jLabelDos)
                            .addComponent(jLabelUno)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelOcho)
                                .addComponent(jLabelNueve)
                                .addComponent(jLabelDiez)
                                .addComponent(jLabelNotas)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldPeriodoSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldTres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldCuatro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldCinco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldSeis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldSiete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldOcho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldNueve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldDiez, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinnerInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldFolio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelCuatro)
                                .addComponent(jLabelCinco)
                                .addComponent(jLabelSeis)
                                .addComponent(jLabelSiete)
                                .addComponent(jLabelTres))
                            .addComponent(jLabelArt))
                        .addGap(65, 65, 65))))
        );

        JSpinner.DateEditor fecha = new JSpinner.DateEditor(spinnerInicio, "dd-MMM-yyyy");
        spinnerInicio.setEditor(fecha);

        jTableVacLic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableVacLic.setComponentPopupMenu(jPopupVacLicEliminar);
        jTableVacLic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableVacLicMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableVacLicMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVacLic);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCerrarActionPerformed

    private void jTableVacLicMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVacLicMousePressed
         if(evt.getClickCount()==1){            
            int row = jTableVacLic.rowAtPoint(new Point(evt.getX(), evt.getY()));
            int col = jTableVacLic.columnAtPoint(new Point(evt.getX(), evt.getY()));

            jTableVacLic.changeSelection(row, col, false, false);
        }
        else if(evt.getClickCount()==2){            
            op = 2;
            
            int row = jTableVacLic.rowAtPoint(new Point(evt.getX(), evt.getY()));
            int col = jTableVacLic.columnAtPoint(new Point(evt.getX(), evt.getY()));
            
            jTableVacLic.changeSelection(row, col, false, false);
            id_alf = jTableVacLic.getValueAt(row, 1).toString();
            id_vaclic = jTableVacLic.getValueAt(row, 0).toString();
            String old_data = jTableVacLic.getValueAt(row, col).toString();
            jTableVacLic.removeEditor();
            validarDatoActualizar(old_data, row, col);
        }
    }//GEN-LAST:event_jTableVacLicMousePressed

    private void jTableVacLicMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVacLicMouseReleased
        if(evt.getButton() == MouseEvent.BUTTON3){
            int row = jTableVacLic.rowAtPoint(new Point(evt.getX(), evt.getY()));
            int col = jTableVacLic.columnAtPoint(new Point(evt.getX(), evt.getY()));
            jTableVacLic.changeSelection(row, col, false, false);

            id = jTableVacLic.getValueAt(row, 0).toString();
            int i = Integer.parseInt(id);
            jTableVacLic.setEditingRow(i);
        }
    }//GEN-LAST:event_jTableVacLicMouseReleased

    private void jMenuItemVacLicEliminarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemVacLicEliminarMouseReleased
        int conf = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este registo?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if(conf == 0){
            if(eliminarRegistro(id)){
                recargarTabla();
                JOptionPane.showMessageDialog(this, "Registro eliminado", "Aviso", JOptionPane.INFORMATION_MESSAGE);                
            }
        }
    }//GEN-LAST:event_jMenuItemVacLicEliminarMouseReleased

    private void jButtonAgregarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAgregarMouseReleased
         if(validarDatosInsertar()){
            int conf = JOptionPane.showConfirmDialog(this, "¿Está seguro de ingresar el registo?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(conf == 0){            
                if(insertarRegistro()){
                    limpiarCampos();
                    recargarTabla();
                    JOptionPane.showMessageDialog(this, "Registro ingresado correctamente"); 
                }
            }
        }
    }//GEN-LAST:event_jButtonAgregarMouseReleased

    private void jButtonBuscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBuscarMouseReleased
        
        Crypto crypto = new Crypto();
        String numemp = JOptionPane.showInputDialog(this,
                "Escriba el número de empleado", "Ingresar dato", JOptionPane.QUESTION_MESSAGE);
        
        if (numemp != null) {
            if(numemp.isEmpty() || !numemp.matches("[0-9]+"))
                JOptionPane.showMessageDialog(this, "Dato inválido", "ERROR", JOptionPane.ERROR_MESSAGE);
            else{
                ArrayList<String> datos = new ArrayList();
                String query = "SELECT * FROM alfabetico WHERE numemp = '" + crypto.encrypt(numemp) + "'";

                datos = helper.getData(query);

                if(datos.isEmpty())
                    JOptionPane.showMessageDialog(this,
                            "No existe el registo con el número de empleado: "
                                    + numemp, "Aviso", JOptionPane.INFORMATION_MESSAGE);
                else{
                    id_alf = datos.get(0);
                    this.jLabelAdsc.setText("adsc:   " + datos.get(1));
                    this.jLabelTarjeta.setText("tarjeta:   " + datos.get(2));
                    this.jLabelNumEmp.setText("numemp:   " + datos.get(3));
                    this.jLabelNombre.setText("nombre:   " + datos.get(4));

                    limpiarCampos();
                    setModelToTable();
                    habilitarCampos(true);
                }
            }
        }
    }//GEN-LAST:event_jButtonBuscarMouseReleased
       
    /**
     * Obtiene el modelo de los datos de la tabla de la Base de Datos y lo
     * carga en el JTable.
     */
    public void setModelToTable(){
        
        String query = "SELECT * FROM vaclic WHERE id_alf = " + id_alf + " ORDER BY id_vaclic DESC";
        model = helper.getTableModel(query, "vaclic");
        jTableVacLic.createDefaultColumnsFromModel();
        jTableVacLic.setModel(model);
        
        ajustarColumnas();  
    }
    
    /**
     * Elimina los registros del JTable y los carga nuevamente actualizados.
     */
    private void recargarTabla(){
                            
        int filas = jTableVacLic.getRowCount();
        for(int i=0; i<filas; i++)
            model.removeRow(0);

        getDataFromTable();
    }
    
    /**
     * Cargar los datos en el jTableVacLic.
     * Utiliza el método getDataModel de la clase HelperDB para obtener el total
     * de los registros de la tabla "vaclic" de la base de datos "Incidencias"
     * y mostrarlos en el jTableVacLic siguiendo el modelo puesto por
     * setModelToTable().
     */
    private void getDataFromTable(){
        String query = "SELECT * FROM vaclic WHERE id_alf = " + id_alf + " ORDER BY id_vaclic DESC";
        model = helper.getDataModel(query, "vaclic");
        jTableVacLic.setModel(model);
        
        ajustarColumnas();        
    }
    
    /**
     * Ajustar las columnas del jTableVacLic al contenido de las celdas.
     */
    private void ajustarColumnas(){
        jTableVacLic.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );

        for (int column = 0; column < jTableVacLic.getColumnCount(); column++)
        {
            TableColumn tableColumn = jTableVacLic.getColumnModel().getColumn(column);
            int preferredWidth = tableColumn.getMinWidth();
            int maxWidth = tableColumn.getMaxWidth();

            for (int row = 0; row < jTableVacLic.getRowCount(); row++)
            {
                TableCellRenderer cellRenderer = jTableVacLic.getCellRenderer(row, column);
                Component c = jTableVacLic.prepareRenderer(cellRenderer, row, column);
                int width = c.getPreferredSize().width + jTableVacLic.getIntercellSpacing().width;
                preferredWidth = Math.max(preferredWidth, width);

                if (preferredWidth >= maxWidth)
                {
                    preferredWidth = maxWidth;
                    break;
                }
            }
        tableColumn.setPreferredWidth( preferredWidth + 20);
        
        jTableVacLic.getColumnModel().getColumn(0).setMaxWidth(0);
        jTableVacLic.getColumnModel().getColumn(0).setMinWidth(0);
        jTableVacLic.getColumnModel().getColumn(0).setPreferredWidth(0);
        
        jTableVacLic.getColumnModel().getColumn(1).setMaxWidth(0);
        jTableVacLic.getColumnModel().getColumn(1).setMinWidth(0);
        jTableVacLic.getColumnModel().getColumn(1).setPreferredWidth(0);
        
        jTableVacLic.setShowGrid(true);
        }
    }
    
    /**
     * Limpia los campos de captura de datos.
     */
    private void limpiarCampos(){
        
        Date fecha = new Date();
        Date inicio = null;
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy"); 
        String fec = sdf.format(fecha);
        
        try {
            inicio = new SimpleDateFormat("dd-MMM-yyyy").parse(fec);                
        } catch (ParseException ex) {
            Logger.getLogger(VacLic.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        this.fieldFolio.setText("");
        this.fieldClave.setText("");
        this.fieldPeriodoSerie.setText("");
        this.fieldDias.setText("");
        this.spinnerInicio.getModel().setValue(inicio);
        this.fieldArt.setText("");
        this.fieldUno.setText("");
        this.fieldDos.setText("");
        this.fieldTres.setText("");
        this.fieldCuatro.setText("");
        this.fieldCinco.setText("");
        this.fieldSeis.setText("");
        this.fieldSiete.setText("");
        this.fieldOcho.setText("");
        this.fieldNueve.setText("");
        this.fieldDiez.setText("");
        this.fieldNotas.setText("");
    }
    
    private boolean insertarRegistro(){
        boolean r = false;
        
        // 1. OBTENER LOS DATOS DEL NUEVO REGISTRO Y CONCATENARLOS EN UN String
        String [] datos = getDatosInsertarRegistro();
        
        String d = "";
        for(int i=0; i<datos.length; i++){
            d = d + datos[i];
        }
        
        // 2. DEFINIR EN UN String LA SINTAXIS DEL COMANDO SQL A ENVIAR
        String query;
        query = "INSERT INTO vaclic (" +
                "id_alf, " +
                "folio, " +
                "clave, " +
                "periodoserie, " +
                "dias, " +
                "inicio, " +
                "articulo, " +
                "`1`, " +
                "`2`, " +
                "`3`, " +
                "`4`, " +
                "`5`, " +
                "`6`, " +
                "`7`, " +
                "`8`, " +
                "`9`, " +
                "`10`, " +
                "notas, " +
                "fcaptura, " +
                "hcaptura) " +
                "VALUES (" + d + ")";
        
        // 3. ENVIAR EL Query Y OBTENER LA RESPUESTA DE LA BASE DE DATOS
        r = helper.updateDB(query);
        
        return r;
    }
    
    private String [] getDatosInsertarRegistro(){
        
        Crypto crypto = new Crypto();
        
        Date date = new Date();
        Date time = new Date();
        String [] datos = new String[20];
        
        SimpleDateFormat inicio = new SimpleDateFormat("dd-MMM-yyyy");
        SimpleDateFormat sdf_fecha = new SimpleDateFormat("dd-MMM-yyyy");
        SimpleDateFormat sdf_hora = new SimpleDateFormat("HH:mm");
        
        String fecha = sdf_fecha.format(date);
        String hora = sdf_hora.format(time);
        
        datos[0] = "'" + id_alf + "', ";
        datos[1] = "'" + crypto.encrypt(this.fieldFolio.getText()) + "', ";
        datos[2] = "'" + crypto.encrypt(this.fieldClave.getText()) + "', ";
        datos[3] = "'" + crypto.encrypt(this.fieldPeriodoSerie.getText()) + "', ";
        datos[4] = "'" + crypto.encrypt(this.fieldDias.getText()) + "', ";
        datos[5] = "'" + crypto.encrypt(inicio.format(this.spinnerInicio.getValue())) + "', ";
        datos[6] = "'" + crypto.encrypt(this.fieldArt.getText()) + "', ";
        datos[7] = "'" + crypto.encrypt(this.fieldUno.getText()) + "', ";
        datos[8] = "'" + crypto.encrypt(this.fieldDos.getText()) + "', ";
        datos[9] = "'" + crypto.encrypt(this.fieldTres.getText()) + "', ";
        datos[10] = "'" + crypto.encrypt(this.fieldCuatro.getText()) + "', ";
        datos[11] = "'" + crypto.encrypt(this.fieldCinco.getText()) + "', ";
        datos[12] = "'" + crypto.encrypt(this.fieldSeis.getText()) + "', ";
        datos[13] = "'" + crypto.encrypt(this.fieldSiete.getText()) + "', ";
        datos[14] = "'" + crypto.encrypt(this.fieldOcho.getText()) + "', ";
        datos[15] = "'" + crypto.encrypt(this.fieldNueve.getText()) + "', ";
        datos[16] = "'" + crypto.encrypt(this.fieldDiez.getText()) + "', ";
        datos[17] = "'" + crypto.encrypt(this.fieldNotas.getText()) + "', ";
        datos[18] = "'" + crypto.encrypt(fecha) + "', ";
        datos[19] = "'" + crypto.encrypt(hora) + "'";
        
        return datos;
    }
    
    private boolean validarDatosInsertar(){
        
        String msg = "";
        boolean datos_ok = false;  
        
        if(fieldFolio.getText().isEmpty())
            msg = "<html>El campo <b><u>Folio</u></b> no debe quedar vacío </html>";
        
        else if(fieldClave.getText().isEmpty())
            msg = "<html>El campo <b><u>Clave</u></b> no debe quedar vacío </html>";
        
        else if(fieldDias.getText().isEmpty())
            msg = "<html>El campo <b><u>Días</u></b> no debe quedar vacío </html>";
        
        else if(!fieldClave.getText().isEmpty()){
            int clave = Integer.parseInt(fieldClave.getText());
            // SI PeriodoSerie ES VACÍO Y SE CAPTURAN VACACIONES O LIC. MED.
            if(fieldPeriodoSerie.getText().isEmpty() && (clave>=50 && clave<=70))
                msg = "<html>El campo <b><u>PeriodoSerie</u></b> no debe quedar vacío </html>";
            // SI Art ES VACÍO Y SE CAPTURAN LIC CON Y SIN GOCE DE SUELDO
            else if(fieldArt.getText().isEmpty() && (clave<50 || clave>70))
                msg = "<html>El campo <b><u>Art</u></b> no debe quedar vacío </html>";
            // SI 1 ESTÁ VACÍO Y SE CAPTURAN VACACIONES
            else if(fieldUno.getText().isEmpty() && (clave>=60 && clave<70))
            msg = "<html><li>La clave del registro corresponde a Vacaciones, "
                    + "por lo que es necesario agregar las fechas correspondientes.</li>"
                    + "<li>Utilize al menos el campo <b><u>1</u></b> para ello.</li></html>";
        }
        
        // SI LOS DATOS NO SON VÁLIDOS
        if(!msg.isEmpty())
            JOptionPane.showMessageDialog(this, msg, "ERROR", JOptionPane.ERROR_MESSAGE);
        else
            datos_ok = true;
            
        return datos_ok;
    }
    
    private void actualizarRegistro(String campo, String new_data, int row, int col){
        
        Crypto crypto = new Crypto();
        
        String query = "UPDATE vaclic SET " + campo + "= '" + crypto.encrypt(new_data) + "' WHERE id_vaclic = '" + id_vaclic + "'";
        if(helper.updateDB(query)) {
            jTableVacLic.setValueAt(new_data, row, col);
            ajustarColumnas();
        }
    }
    
    private void validarDatoActualizar(String old_data, int row, int col){
        String new_data;
        String msg = "<html>Cambiar el valor <b><u>" + old_data + "</u></b> por: </html>";
        int error;
        
        switch(col){
            case 2: // Folio
                new_data = (String) JOptionPane.showInputDialog(this, msg, "Actualizar dato", JOptionPane.QUESTION_MESSAGE, null, null, "Solo números");
                if(new_data.matches("[0-9]+"))
                    actualizarRegistro("folio", new_data, row, col);
                else
                    JOptionPane.showMessageDialog(this, "Solo se permiten números", "ERROR", JOptionPane.ERROR_MESSAGE);
                break;
            case 3: // Clave
                new_data = (String) JOptionPane.showInputDialog(this, msg, "Actualizar dato", JOptionPane.QUESTION_MESSAGE, null, null, "Solo 2 números");
                if(new_data.matches("[0-9]{2}"))
                    actualizarRegistro("clave", new_data, row, col);
                else
                    JOptionPane.showMessageDialog(this, "Solo se permiten 2 números", "ERROR", JOptionPane.ERROR_MESSAGE);
                break;
            case 4: // PeriodoSerie
                new_data = (String) JOptionPane.showInputDialog(this, msg, "Actualizar dato", JOptionPane.QUESTION_MESSAGE, null, null, "Vac ej: 01/15");
                if(new_data.isEmpty() || new_data.matches("[a-zA-Z0-9]+") || new_data.matches("[0-4]{2}/[0-9]{2}"))
                    actualizarRegistro("periodoserie", new_data.toUpperCase(), row, col);
                else
                    JOptionPane.showMessageDialog(this, "<html><li>El tipo de dato no está permitido</li>"
                            + "<li>Para Licencias sólo letras y números, sin espacios ni carácteres especiales</li>"
                            + "<li>Para vacaciones el formato es: 00/00</li></html>", "ERROR", JOptionPane.ERROR_MESSAGE);
                break;
            case 5: // Dias
                new_data = (String) JOptionPane.showInputDialog(this, msg, "Actualizar dato", JOptionPane.QUESTION_MESSAGE, null, null, "Solo 2 números");
                if(new_data.matches("[0-9]{1,3}") && Integer.parseInt(new_data)<=180)
                    actualizarRegistro("dias", new_data, row, col);
                else
                    JOptionPane.showMessageDialog(this, "Solo se permiten números que no excedan 180 días", "ERROR", JOptionPane.ERROR_MESSAGE);
                break;
            
            case 6: // Inicio
                new_data = (String) JOptionPane.showInputDialog(this, msg, "Actualizar dato", JOptionPane.QUESTION_MESSAGE, null, null, "dd-mmm-aaaa");
                String[] month = {"ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"};                
                String[] date = new_data.split("-");
                
                try{
                    int dia = Integer.parseInt(date[0]);
                    
                    Calendar calendar = Calendar.getInstance();
                    int y = calendar.get(Calendar.YEAR);
                    int year = Integer.parseInt(date[2]);

                    boolean mes_ok = false;
                    for(int i=0; i<month.length; i++){
                        if(month[i].equals(date[1]))
                            mes_ok = true;
                    }

                    if(new_data.matches("[0-3][0-9]-[a-z]{3}-[0-9]{4}") &&
                            (dia<=31 && mes_ok==true && (y-5<year && year<y+5)))
                        actualizarRegistro("inicio", new_data, row, col);                    
                    else
                        error = Integer.parseInt("error");
                } catch(Exception e){
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "<html><li>La fecha no es válida.</li>"
                                + "<li>El formato debe ser dd-mmm-aaaa</li>"
                                + "<li>dd - deben ser 2 números</li>"
                                + "<li>mmm - Usar las 3 primeras letras de un mes ej: ene, feb, mar, ...</li>"
                                + "<li>aaaa - Deben ser 4 números y la fecha no debe ser mayor o menor a 5 años "
                                + "del año en curso</li>", "ERROR", JOptionPane.ERROR_MESSAGE);   
                }
                break;
                
                case 7: // Articulo
                    new_data = (String) JOptionPane.showInputDialog(this, msg, "Actualizar dato", JOptionPane.QUESTION_MESSAGE, null, null, "##.#");
                    if(new_data.isEmpty() || new_data.matches("[0-9]{2}.[0-9]"))
                        actualizarRegistro("articulo", new_data, row, col);
                    else
                        JOptionPane.showMessageDialog(this, "Solo se permiten números en el formato ##.#",
                                "ERROR", JOptionPane.ERROR_MESSAGE);
                    break;
                    
                case 8: // 1
                case 9: // 2
                case 10: // 3
                case 11: // 4
                case 12: // 5
                case 13: // 6
                case 14: // 7
                case 15: // 8
                case 16: // 9
                case 17: // 10
                    new_data = (String) JOptionPane.showInputDialog(this, msg, "Actualizar dato", JOptionPane.QUESTION_MESSAGE, null, null, "# ó ##-##");
                    String [] dias = new String[2];
                    int first = 0;
                    int last = 0;
                    
                    try{
                        if(!new_data.isEmpty() && new_data.contains("-")){
                            dias = new_data.split("-");
                            first = Integer.parseInt(dias[0]);
                            last = Integer.parseInt(dias[1]);
                        }
                        else if(!new_data.isEmpty() && !new_data.contains("-"))
                            first = Integer.parseInt(new_data);

                        String col_name = "'" + jTableVacLic.getColumnName(col) + "'"; 
                        if(new_data.isEmpty() || ((new_data.matches("[1-9][0-9]?-?[1-9]?[0-9]?"))
                                && (first <= 31 && last<=31)))
                            actualizarRegistro(col_name, new_data, row, col);
                        else
                            error = Integer.parseInt("error");
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(this, "Solo se permiten números en el formato # ó ##-##",
                                "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                    break;
                    
                case 18: // Notas
                    new_data = JOptionPane.showInputDialog(this, msg, "Actualizar dato", JOptionPane.QUESTION_MESSAGE);
                    actualizarRegistro("notas", new_data.toUpperCase(), row, col);
                    break;
        }
    }
    
    private boolean eliminarRegistro(String id){
        boolean r;
        String query = "DELETE FROM vaclic WHERE id_vaclic = " + "'" + id + "'";
        
        r = helper.updateDB(query);
        return r;
    }
    
    private void habilitarCampos(Boolean habilitar){
        this.jButtonAgregar.setEnabled(habilitar);
        this.fieldFolio.setEnabled(habilitar);
        this.fieldClave.setEnabled(habilitar);
        this.fieldPeriodoSerie.setEnabled(habilitar);
        this.fieldDias.setEnabled(habilitar);
        this.spinnerInicio.setEnabled(habilitar);
        this.fieldArt.setEnabled(habilitar);
        this.fieldUno.setEnabled(habilitar);
        this.fieldDos.setEnabled(habilitar);
        this.fieldTres.setEnabled(habilitar);
        this.fieldCuatro.setEnabled(habilitar);
        this.fieldCinco.setEnabled(habilitar);
        this.fieldSeis.setEnabled(habilitar);
        this.fieldSiete.setEnabled(habilitar);
        this.fieldOcho.setEnabled(habilitar);
        this.fieldNueve.setEnabled(habilitar);
        this.fieldDiez.setEnabled(habilitar);
        this.fieldNotas.setEnabled(habilitar);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VacLic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VacLic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VacLic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VacLic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VacLic().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog dReporte;
    private javax.swing.JFormattedTextField fieldArt;
    private javax.swing.JTextField fieldCinco;
    private javax.swing.JFormattedTextField fieldClave;
    private javax.swing.JTextField fieldCuatro;
    private javax.swing.JFormattedTextField fieldDias;
    private javax.swing.JTextField fieldDiez;
    private javax.swing.JTextField fieldDos;
    private javax.swing.JFormattedTextField fieldFolio;
    private javax.swing.JTextField fieldNotas;
    private javax.swing.JTextField fieldNueve;
    private javax.swing.JTextField fieldOcho;
    private javax.swing.JTextField fieldPeriodoSerie;
    private javax.swing.JTextField fieldSeis;
    private javax.swing.JTextField fieldSiete;
    private javax.swing.JTextField fieldTres;
    private javax.swing.JTextField fieldUno;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JLabel jLabelAdsc;
    private javax.swing.JLabel jLabelArt;
    private javax.swing.JLabel jLabelCinco;
    private javax.swing.JLabel jLabelClave;
    private javax.swing.JLabel jLabelCuatro;
    private javax.swing.JLabel jLabelDias;
    private javax.swing.JLabel jLabelDiez;
    private javax.swing.JLabel jLabelDos;
    private javax.swing.JLabel jLabelFolio;
    private javax.swing.JLabel jLabelInicio;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelNotas;
    private javax.swing.JLabel jLabelNueve;
    private javax.swing.JLabel jLabelNumEmp;
    private javax.swing.JLabel jLabelOcho;
    private javax.swing.JLabel jLabelPeriodoSerie;
    private javax.swing.JLabel jLabelSeis;
    private javax.swing.JLabel jLabelSiete;
    private javax.swing.JLabel jLabelTarjeta;
    private javax.swing.JLabel jLabelTres;
    private javax.swing.JLabel jLabelUno;
    private javax.swing.JMenuItem jMenuItemVacLicEliminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupVacLicEliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVacLic;
    private javax.swing.JSpinner spinnerInicio;
    // End of variables declaration//GEN-END:variables
}
