import java.awt.Component;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;


/**
 * @author Ing. Juan José Guzmán Cruz
 */

public class Alfabetico extends javax.swing.JFrame {
    
    // Definir variables
    HelperDB helper;
    DefaultTableModel model;
    String id;
    int op;
    TableRowSorter trsfiltro;
    
    // Constructor de la clase
    public Alfabetico() {
        initComponents();
        
        // Inicializar variables globales
        new GlobalVariables().setActualizado(false);
        
        // Inicializar variables
        helper = new HelperDB();
        model = new DefaultTableModel();

        // Condiciones iniciales del jTable
        jTableAlfabetico.setSelectionMode(NORMAL);
        jTableAlfabetico.setEnabled(false);
        
        // Maximizar y centar jForm en la pantalla
        setExtendedState(Alfabetico.MAXIMIZED_BOTH); 
        setLocationRelativeTo(null);
        
        // Métodos de inicio
        setModelToTable();
    } // Cierre del constructor
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuEliminar = new javax.swing.JPopupMenu();
        jMenuItemEliminar = new javax.swing.JMenuItem();
        dAcceso = new javax.swing.JDialog();
        lUsuario = new javax.swing.JLabel();
        lContraseña = new javax.swing.JLabel();
        tfUsuario = new javax.swing.JTextField();
        pfContraseña = new javax.swing.JPasswordField();
        bAcceder = new javax.swing.JButton();
        bCancelar = new javax.swing.JButton();
        jPanelBuscar = new javax.swing.JPanel();
        jLabelBuscar = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jButtonNuevo = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlfabetico = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuItemSalir = new javax.swing.JMenuItem();
        jMenuItemImprimir = new javax.swing.JMenuItem();
        jMenuCaptura = new javax.swing.JMenu();
        jMenuItemVacLic = new javax.swing.JMenuItem();

        jMenuItemEliminar.setText("ELIMINAR");
        jMenuItemEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItemEliminarMouseReleased(evt);
            }
        });
        jPopupMenuEliminar.add(jMenuItemEliminar);

        dAcceso.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dAcceso.setMinimumSize(new java.awt.Dimension(320, 300));
        dAcceso.setModal(true);
        dAcceso.setResizable(false);

        lUsuario.setText("Usuario:");

        lContraseña.setText("Contraseña:");

        bAcceder.setText("Acceder");
        bAcceder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bAccederMouseReleased(evt);
            }
        });

        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dAccesoLayout = new javax.swing.GroupLayout(dAcceso.getContentPane());
        dAcceso.getContentPane().setLayout(dAccesoLayout);
        dAccesoLayout.setHorizontalGroup(
            dAccesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dAccesoLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(dAccesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lUsuario)
                    .addComponent(lContraseña))
                .addGap(24, 24, 24)
                .addGroup(dAccesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(pfContraseña))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(dAccesoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(bAcceder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(bCancelar)
                .addGap(35, 35, 35))
        );
        dAccesoLayout.setVerticalGroup(
            dAccesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dAccesoLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(dAccesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lUsuario)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(dAccesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lContraseña)
                    .addComponent(pfContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(dAccesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAcceder)
                    .addComponent(bCancelar))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ALFABETICO");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setName("frameAlfabetico"); // NOI18N

        jPanelBuscar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelBuscar.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabelBuscar.setText("Buscar:");

        jTextFieldBuscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyReleased(evt);
            }
        });

        jButtonNuevo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.setPreferredSize(new java.awt.Dimension(90, 50));
        jButtonNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonNuevoMouseReleased(evt);
            }
        });

        jButtonSalir.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonSalir.setText("Salir");
        jButtonSalir.setMaximumSize(new java.awt.Dimension(90, 50));
        jButtonSalir.setPreferredSize(new java.awt.Dimension(90, 50));
        jButtonSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonSalirMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelBuscarLayout = new javax.swing.GroupLayout(jPanelBuscar);
        jPanelBuscar.setLayout(jPanelBuscarLayout);
        jPanelBuscarLayout.setHorizontalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jPanelBuscarLayout.setVerticalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBuscar)
                    .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableAlfabetico.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTableAlfabetico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableAlfabetico.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableAlfabetico.setComponentPopupMenu(jPopupMenuEliminar);
        jTableAlfabetico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableAlfabeticoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableAlfabeticoMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAlfabetico);

        jMenuBar1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jMenuArchivo.setText("Archivo");
        jMenuArchivo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jMenuItemSalir.setText("Imprimir");
        jMenuArchivo.add(jMenuItemSalir);

        jMenuItemImprimir.setText("Salir");
        jMenuArchivo.add(jMenuItemImprimir);

        jMenuBar1.add(jMenuArchivo);

        jMenuCaptura.setText("Captura");
        jMenuCaptura.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jMenuItemVacLic.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jMenuItemVacLic.setText("Vac y Lic");
        jMenuItemVacLic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVacLicActionPerformed(evt);
            }
        });
        jMenuCaptura.add(jMenuItemVacLic);

        jMenuBar1.add(jMenuCaptura);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        dAcceso.dispose();
    }//GEN-LAST:event_bCancelarActionPerformed

    private void bAccederMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bAccederMouseReleased
        
        String usuario = tfUsuario.getText();
        String contraseña = new String(pfContraseña.getPassword());
        
        String query = "SELECT * FROM Usuarios WHERE Usuario = '" + usuario + "' AND Contraseña = MD5('" + contraseña + "');";
        
        ArrayList<String> c = helper.getUserData(query);
        
        if(!c.isEmpty()){
            dAcceso.dispose();
            VacLic vaclic = new VacLic();
            vaclic.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(dAcceso, "Acceso denegado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bAccederMouseReleased
    
    /** 
     * Llamar al método filtrar() al escribir un valor en el jTextFieldBuscar.
     * @param evt Permite conocer los eventos del ratón
     */
    private void jTextFieldBuscarKeyReleased(java.awt.event.KeyEvent evt) {
   
        if(jTextFieldBuscar.getText().isEmpty()) {
            jTableAlfabetico.setRowSorter(null);
            trsfiltro = new TableRowSorter(jTableAlfabetico.getModel());
            jTableAlfabetico.setRowSorter(trsfiltro);
        }
        filtrar();
    } // Cierre del método
    
    /**
     * Abir el jDialog "ActualizarAlfabetico" al presionar el jButtonNuevo.
     * Los parámetros enviados son: Parent = this, Modal = true y op = 1 
     * Al cerrarse el jDialog se recargan los datos en el jTableAlfabetico.
     * @param evt Permite conocer los eventos del ratón
     */
    private void jButtonNuevoMouseReleased(java.awt.event.MouseEvent evt) {
      
        ActualizarAlfabetico aa = new ActualizarAlfabetico(this, true, 1);
        aa.setLocationRelativeTo(null);
        aa.setTitle("Nuevo registro");
        aa.setVisible(true);
        
        if (new GlobalVariables().isActualizado()) {
                recargarTabla();
                filtrar();
                new GlobalVariables().setActualizado(false);
        }
    } // Cierre del método
    
    /**
     * Cerrar la aplicación Incidencias
     * @param evt Permite conocer los eventos del ratón
     */
    private void jButtonSalirMouseReleased(java.awt.event.MouseEvent evt) {
        System.exit(0);
    } // Cierre del método

    /**
     * Al ser presionado el botón principal del ratón.
     * Una vez, selecciona todo el renglón.
     * Dos veces, llama al jDialog "ActualizarAlfabetico" cargando los datos del
     * registro seleccionado.
     * @param evt Permite conocer los eventos del ratón
     */
    private void jTableAlfabeticoMousePressed(java.awt.event.MouseEvent evt) {
        if(evt.getClickCount()==1){          
            int row = jTableAlfabetico.rowAtPoint(new Point(evt.getX(), evt.getY()));
            int col = jTableAlfabetico.columnAtPoint(new Point(evt.getX(), evt.getY()));

            jTableAlfabetico.changeSelection(row, col, false, false);
        }
        else if(evt.getClickCount()==2){            
            ActualizarAlfabetico aa = new ActualizarAlfabetico(this, true, 2);
            String[] datos = new String[15];
            
            int row = jTableAlfabetico.rowAtPoint(new Point(evt.getX(), evt.getY()));
            int col = jTableAlfabetico.columnAtPoint(new Point(evt.getX(), evt.getY()));
            
            jTableAlfabetico.changeSelection(row, col, false, false);
            id = jTableAlfabetico.getValueAt(row, 0).toString();
            for (int i=0; i<15; i++) {
                datos[i] = jTableAlfabetico.getValueAt(row, i).toString();
            }
            
            aa.cargarDatosActualizar(datos);
            aa.setTitle("Actualizar");
            aa.setLocationRelativeTo(null);
            aa.setVisible(true);
            
            if (new GlobalVariables().isActualizado()) {
                recargarTabla();
                filtrar();
                new GlobalVariables().setActualizado(false);
            }
        }
    } // Cierre del método
    
    /**
     * Al ser presionado el botón secundario del ratón.
     * Se selecciona el reglón y se permite la edición, preparando para la
     * posibilidad de eliminar el registro de la base de datos "Incidencias".
     * @param evt Permite conocer los eventos del ratón
     */
    private void jTableAlfabeticoMouseReleased(java.awt.event.MouseEvent evt) {
        if(evt.getButton() == MouseEvent.BUTTON3){
            int row = jTableAlfabetico.rowAtPoint(new Point(evt.getX(), evt.getY()));
            int col = jTableAlfabetico.columnAtPoint(new Point(evt.getX(), evt.getY()));
            jTableAlfabetico.changeSelection(row, col, false, false);

            id = jTableAlfabetico.getValueAt(row, 0).toString();
            int i = Integer.parseInt(id);
            jTableAlfabetico.setEditingRow(i);
        }   
    } // Cierre del método
    
    /**
     * Obtiene el modelo de los datos de la tabla de la Base de Datos y lo
     * carga en el JTable.
     */
    public void setModelToTable(){
        
        String query = "SELECT * FROM alfabetico";
        model = helper.getTableModel(query, "alfabetico");
        jTableAlfabetico.createDefaultColumnsFromModel();
        jTableAlfabetico.setModel(model);
        trsfiltro = new TableRowSorter(jTableAlfabetico.getModel());
        jTableAlfabetico.setRowSorter(trsfiltro);
        
        ajustarColumnas();  
    }
    
    /**
     * Ajustar las columnas del jTableAlfabetico al contenido de las celdas.
     */
    private void ajustarColumnas(){
        jTableAlfabetico.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );

        for (int column = 0; column < jTableAlfabetico.getColumnCount(); column++)
        {
            TableColumn tableColumn = jTableAlfabetico.getColumnModel().getColumn(column);
            int preferredWidth = tableColumn.getMinWidth();
            int maxWidth = tableColumn.getMaxWidth();

            for (int row = 0; row < jTableAlfabetico.getRowCount(); row++)
            {
                TableCellRenderer cellRenderer = jTableAlfabetico.getCellRenderer(row, column);
                Component c = jTableAlfabetico.prepareRenderer(cellRenderer, row, column);
                int width = c.getPreferredSize().width + jTableAlfabetico.getIntercellSpacing().width;
                preferredWidth = Math.max(preferredWidth, width);

                if (preferredWidth >= maxWidth)
                {
                    preferredWidth = maxWidth;
                    break;
                }
            }
        tableColumn.setPreferredWidth( preferredWidth );
        
        jTableAlfabetico.getColumnModel().getColumn(0).setMaxWidth(0);
        jTableAlfabetico.getColumnModel().getColumn(0).setMinWidth(0);
        jTableAlfabetico.getColumnModel().getColumn(0).setPreferredWidth(0);
        }
    } // Cierre del método

    /**
     * Elimina los registros del JTable y los carga nuevamente actualizados.
     */
    public void recargarTabla(){
        
        // ANULAR EL FILTRO Y ELIMININAR TODAS LAS FILAS DEL jTableAlfabetico
        jTableAlfabetico.setRowSorter(null);
        int filas = jTableAlfabetico.getRowCount();
        for(int j=0; j<filas; j++)
            model.removeRow(0);
        
        getDataFromTable();
    }
    
    /**
     * Cargar los datos en el jTableAlfabetico.
     * Utiliza el método getDataModel de la clase HelperDB para obtener el total
     * de los registros de la tabla "alfabetico" de la base de datos "Incidencias"
     * y mostrarlos en el jTableAlfabetico siguiendo el modelo puesto por
     * setModelToTable().
     */
    private void getDataFromTable(){
        String query = "SELECT * FROM alfabetico";
        model = helper.getDataModel(query, "alfabetico");
        jTableAlfabetico.setModel(model);
        
        // AGREGAR EL TableRowSorter AL JTableAlfabetico PARA PODER FILTRAR
        trsfiltro = new TableRowSorter(jTableAlfabetico.getModel());
        jTableAlfabetico.setRowSorter(trsfiltro);
        
        ajustarColumnas();        
    }
    
    /**
     * Filtra los datos coincidentes entre el jTextFieldBuscar y la jtableAlfabetico.
     * Se filtran los registros coincidentes entre la información que se va
     * escribiendo en el jTextFieldBuscar y los registros de las columnas
     * 2, 3 y/o 4 de la jTableAlfabetico 
     */
    private void filtrar(){
        
        String dato = jTextFieldBuscar.getText().toUpperCase();
        
        if (!dato.isEmpty()) {
            List<RowFilter<Object,Object>> filters = new ArrayList<RowFilter<Object,Object>>(2);
            filters.add(RowFilter.regexFilter(dato, 2));
            filters.add(RowFilter.regexFilter(dato, 3));
            filters.add(RowFilter.regexFilter(dato, 4));
            RowFilter<Object,Object> fooBarFilter = RowFilter.orFilter(filters);

            trsfiltro.setRowFilter(fooBarFilter);
        }
    }
    
    /**
     * Se utiliza un diálogo de confirmación para la eliminación de un registro
     * de la base de datos.
     * @param evt Permite conocer los eventos del ratón
     */
    private void jMenuItemEliminarMouseReleased(java.awt.event.MouseEvent evt) {
        int conf = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este registo?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if(conf == 0){
            if(eliminarRegistro(id)){
                JOptionPane.showMessageDialog(this, "Registro eliminado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                recargarTabla();
                filtrar();
            }
        }
    }
    
    /**
     * Envia sentencia sql para eliminar un registro de la base de datos
     * @param id Identificador único de un registro en la base de datos
     * @return 
     */
    private boolean eliminarRegistro(String id){
        
        boolean r;
        String query = "DELETE FROM alfabetico WHERE id = "+id;
        
        r = helper.updateDB(query);
        return r;
    }
    
    // *************** OPCIONES DE MENU *******************
    // ABRIR EL JFRAME VacLic
    private void jMenuItemVacLicActionPerformed(java.awt.event.ActionEvent evt) {    
        tfUsuario.setText("");
        pfContraseña.setText("");
        
        dAcceso.setAlwaysOnTop(true);
        dAcceso.setLocationRelativeTo(null);
        dAcceso.setVisible(true);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alfabetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alfabetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alfabetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alfabetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alfabetico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAcceder;
    private javax.swing.JButton bCancelar;
    private javax.swing.JDialog dAcceso;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCaptura;
    private javax.swing.JMenuItem jMenuItemEliminar;
    private javax.swing.JMenuItem jMenuItemImprimir;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenuItem jMenuItemVacLic;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPopupMenu jPopupMenuEliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAlfabetico;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JLabel lContraseña;
    private javax.swing.JLabel lUsuario;
    private javax.swing.JPasswordField pfContraseña;
    private javax.swing.JTextField tfUsuario;
    // End of variables declaration//GEN-END:variables
}
